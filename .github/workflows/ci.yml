name: CI - Tests y Cobertura

# Triggers: cuando hay push a development o PR hacia main
on:
  push:
    branches: [ development ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Tests Unitarios y Cobertura
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.10', '3.11']
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
    
    - name: Configurar Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache dependencias pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Instalar dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage
    
    - name: Ejecutar linting con flake8
      run: |
        # Detener el build si hay errores de sintaxis o nombres indefinidos
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Advertencias por complejidad y estilo (no detiene el build)
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Ejecutar tests con cobertura
      run: |
        coverage run -m unittest discover -s . -p "test_*.py" -v
        coverage report -m
        coverage xml
    
    - name: Subir cobertura a Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Generar reporte HTML de cobertura
      run: |
        coverage html
    
    - name: Subir artefactos de cobertura
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ matrix.python-version }}
        path: htmlcov/
        retention-days: 30
    
    - name: Verificar cobertura mínima
      run: |
        coverage report --fail-under=90