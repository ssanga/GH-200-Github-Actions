name: 🚀 Deploy to Development

on:
  workflow_run:
    workflows: ["🔨 Build and Test"]
    types:
      - completed
    branches: [ development ]
  workflow_dispatch:
    inputs:
      artifact_name:
        description: 'Nombre del artefacto a desplegar'
        required: false
        type: string

jobs:
  deploy-dev:
    name: 🛠️ Despliegue a Development
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    environment: 
      name: development
      url: https://dev.calculadora-app.com
    
    steps:
    - name: 📋 Información del Despliegue
      run: |
        echo "🚀 === DESPLIEGUE A DEVELOPMENT ==="
        echo "👤 Desplegado por: ${{ github.actor }}"
        echo "🆔 Workflow Run: ${{ github.event.workflow_run.id || 'Manual' }}"
        echo "📅 Fecha: $(date -Iseconds)"
        echo "🎯 Entorno: Development"
        echo "🔗 URL: https://dev.calculadora-app.com"
    
    - name: 📥 Descargar Artefacto de Build
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.artifact_name || format('calculadora-development-{0}', github.sha) }}
        path: ./artifacts
        run-id: ${{ github.event.workflow_run.id }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: 📦 Extraer y Preparar Artefacto
      run: |
        echo "📦 Extrayendo artefacto para Development..."
        cd artifacts
        
        # Buscar el archivo ZIP
        ARTIFACT_ZIP=$(find . -name "*.zip" | head -1)
        if [ -n "$ARTIFACT_ZIP" ]; then
          echo "📁 Encontrado artefacto: $ARTIFACT_ZIP"
          unzip -q "$ARTIFACT_ZIP"
          ARTIFACT_DIR=$(find . -type d -name "calculadora-*" | head -1)
          echo "📂 Directorio extraído: $ARTIFACT_DIR"
          
          # Mostrar información del build
          echo "📋 Información del build:"
          cat "$ARTIFACT_DIR/build-info.json" | python3 -m json.tool
          
          # Configurar para development
          echo "ENVIRONMENT=development" >> "$ARTIFACT_DIR/.env"
          echo "DEPLOYED_AT=$(date -Iseconds)" >> "$ARTIFACT_DIR/.env"
          echo "DEPLOYED_BY=${{ github.actor }}" >> "$ARTIFACT_DIR/.env"
        else
          echo "❌ No se encontró artefacto ZIP"
          exit 1
        fi
    
    - name: 🚀 Desplegar a Development
      run: |
        cd artifacts
        ARTIFACT_DIR=$(find . -type d -name "calculadora-*" | head -1)
        
        echo "🚀 Desplegando a Development..."
        echo "📁 Contenido a desplegar:"
        ls -la "$ARTIFACT_DIR/"
        echo ""
        echo "🔧 Configuración del entorno:"
        cat "$ARTIFACT_DIR/.env" 2>/dev/null || echo "No hay archivo .env"
        echo ""
        echo "🌐 Simulando despliegue a servidor de desarrollo..."
        sleep 2
        echo "✅ Aplicación desplegada exitosamente en Development"
        echo "🔗 Disponible en: https://dev.calculadora-app.com"
    
    - name: 🧪 Tests de Humo Post-Despliegue
      run: |
        cd artifacts
        ARTIFACT_DIR=$(find . -type d -name "calculadora-*" | head -1)
        
        echo "🧪 Ejecutando tests de humo..."
        cd "$ARTIFACT_DIR"
        python calculadora.py
        echo "✅ Tests de humo pasaron correctamente"
    
    - name: 📊 Notificación de Despliegue
      run: |
        echo "📢 === NOTIFICACIÓN DE DESPLIEGUE ==="
        echo "✅ Despliegue a Development completado exitosamente"
        echo "👤 Por: ${{ github.actor }}"
        echo "🆔 Commit: ${{ github.sha }}"
        echo "⏰ En: $(date)"
        echo "🔗 URL: https://dev.calculadora-app.com"
        echo ""
        echo "📋 Próximos pasos:"
        echo "- Verificar funcionalidad en Development"
        echo "- Crear PR hacia main para Staging"
        echo "- Ejecutar tests de integración"